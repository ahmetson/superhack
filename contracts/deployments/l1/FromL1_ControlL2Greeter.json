{
  "address": "0x0B7d8512a29BAd68d0df9805DC7Af6B74F54117B",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "crossDomainMessengerAddr",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "greeterL2Addr",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_greeting",
          "type": "string"
        }
      ],
      "name": "setGreeting",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x486c110bf2e111ce30b6585c3c74665bc86559b1f48d03f3a6ce923b95771017",
  "receipt": {
    "to": null,
    "from": "0xde07C361CDAAA43200550b9dBa3Bee2Df56379ab",
    "contractAddress": "0x0B7d8512a29BAd68d0df9805DC7Af6B74F54117B",
    "transactionIndex": 33,
    "gasUsed": "302359",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x6859da6a766763210a9406656fe9a332875dc993ed26e8adbfe2d50047b7a065",
    "transactionHash": "0x486c110bf2e111ce30b6585c3c74665bc86559b1f48d03f3a6ce923b95771017",
    "logs": [],
    "blockNumber": 4044346,
    "cumulativeGasUsed": "1960089",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "02e3501510c7f24612d99057287a9f29",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"crossDomainMessengerAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"greeterL2Addr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_greeting\",\"type\":\"string\"}],\"name\":\"setGreeting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FromL1_ControlL2Greeter.sol\":\"FromL1_ControlL2Greeter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@eth-optimism/contracts/libraries/bridge/ICrossDomainMessenger.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >0.5.0 <0.9.0;\\n\\n/**\\n * @title ICrossDomainMessenger\\n */\\ninterface ICrossDomainMessenger {\\n    /**********\\n     * Events *\\n     **********/\\n\\n    event SentMessage(\\n        address indexed target,\\n        address sender,\\n        bytes message,\\n        uint256 messageNonce,\\n        uint256 gasLimit\\n    );\\n    event RelayedMessage(bytes32 indexed msgHash);\\n    event FailedRelayedMessage(bytes32 indexed msgHash);\\n\\n    /*************\\n     * Variables *\\n     *************/\\n\\n    function xDomainMessageSender() external view returns (address);\\n\\n    /********************\\n     * Public Functions *\\n     ********************/\\n\\n    /**\\n     * Sends a cross domain message to the target messenger.\\n     * @param _target Target contract address.\\n     * @param _message Message to send to the target.\\n     * @param _gasLimit Gas limit for the provided message.\\n     */\\n    function sendMessage(\\n        address _target,\\n        bytes calldata _message,\\n        uint32 _gasLimit\\n    ) external;\\n}\\n\",\"keccak256\":\"0x8f29ae23021345a20ccac7b5edb3fc38268aef943b65adc8a32e74b80bf1833a\",\"license\":\"MIT\"},\"contracts/FromL1_ControlL2Greeter.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\n// This contracts runs on L1, and controls a Greeter on L2.\\n// The addresses are specific to Optimistic Goerli.\\npragma solidity ^0.8.0;\\n\\nimport { ICrossDomainMessenger } from\\n\\\"@eth-optimism/contracts/libraries/bridge/ICrossDomainMessenger.sol\\\";\\n\\ncontract FromL1_ControlL2Greeter {\\n    // Taken from https://community.optimism.io/docs/useful-tools/networks/#optimism-goerli\\n\\n    function setGreeting(address crossDomainMessengerAddr, address greeterL2Addr, string calldata _greeting) public {\\n        bytes memory message;\\n\\n        message = abi.encodeWithSignature(\\\"setGreeting(string,address)\\\",\\n            _greeting, msg.sender);\\n\\n        ICrossDomainMessenger(crossDomainMessengerAddr).sendMessage(\\n            greeterL2Addr,\\n            message,\\n            1000000   // within the free gas limit amount\\n        );\\n    }      // function setGreeting\\n\\n}          // contract FromL1_ControlL2Greeter\",\"keccak256\":\"0x2be0ba2c3a88f7aaf4675023509fd86f1a106cd4167a3303d61e375f434b5ca0\",\"license\":\"Unlicense\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610483806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063581c314b14610030575b600080fd5b61004a60048036038101906100459190610228565b61004c565b005b606082823360405160240161006393929190610309565b6040516020818303038152906040527f8d86c2ad000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090508473ffffffffffffffffffffffffffffffffffffffff16633dbb202b8583620f42406040518463ffffffff1660e01b81526004016101229392919061040f565b600060405180830381600087803b15801561013c57600080fd5b505af1158015610150573d6000803e3d6000fd5b505050505050505050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061019082610165565b9050919050565b6101a081610185565b81146101ab57600080fd5b50565b6000813590506101bd81610197565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126101e8576101e76101c3565b5b8235905067ffffffffffffffff811115610205576102046101c8565b5b602083019150836001820283011115610221576102206101cd565b5b9250929050565b600080600080606085870312156102425761024161015b565b5b6000610250878288016101ae565b9450506020610261878288016101ae565b935050604085013567ffffffffffffffff81111561028257610281610160565b5b61028e878288016101d2565b925092505092959194509250565b600082825260208201905092915050565b82818337600083830152505050565b6000601f19601f8301169050919050565b60006102d9838561029c565b93506102e68385846102ad565b6102ef836102bc565b840190509392505050565b61030381610185565b82525050565b600060408201905081810360008301526103248185876102cd565b905061033360208301846102fa565b949350505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561037557808201518184015260208101905061035a565b60008484015250505050565b600061038c8261033b565b6103968185610346565b93506103a6818560208601610357565b6103af816102bc565b840191505092915050565b6000819050919050565b600063ffffffff82169050919050565b6000819050919050565b60006103f96103f46103ef846103ba565b6103d4565b6103c4565b9050919050565b610409816103de565b82525050565b600060608201905061042460008301866102fa565b81810360208301526104368185610381565b90506104456040830184610400565b94935050505056fea264697066735822122018050e64015e91dfc2fa0c6c9479bc33f3d02dd80a5b1e8eec1cb59f46d7f5fa64736f6c63430008130033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c8063581c314b14610030575b600080fd5b61004a60048036038101906100459190610228565b61004c565b005b606082823360405160240161006393929190610309565b6040516020818303038152906040527f8d86c2ad000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090508473ffffffffffffffffffffffffffffffffffffffff16633dbb202b8583620f42406040518463ffffffff1660e01b81526004016101229392919061040f565b600060405180830381600087803b15801561013c57600080fd5b505af1158015610150573d6000803e3d6000fd5b505050505050505050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061019082610165565b9050919050565b6101a081610185565b81146101ab57600080fd5b50565b6000813590506101bd81610197565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126101e8576101e76101c3565b5b8235905067ffffffffffffffff811115610205576102046101c8565b5b602083019150836001820283011115610221576102206101cd565b5b9250929050565b600080600080606085870312156102425761024161015b565b5b6000610250878288016101ae565b9450506020610261878288016101ae565b935050604085013567ffffffffffffffff81111561028257610281610160565b5b61028e878288016101d2565b925092505092959194509250565b600082825260208201905092915050565b82818337600083830152505050565b6000601f19601f8301169050919050565b60006102d9838561029c565b93506102e68385846102ad565b6102ef836102bc565b840190509392505050565b61030381610185565b82525050565b600060408201905081810360008301526103248185876102cd565b905061033360208301846102fa565b949350505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561037557808201518184015260208101905061035a565b60008484015250505050565b600061038c8261033b565b6103968185610346565b93506103a6818560208601610357565b6103af816102bc565b840191505092915050565b6000819050919050565b600063ffffffff82169050919050565b6000819050919050565b60006103f96103f46103ef846103ba565b6103d4565b6103c4565b9050919050565b610409816103de565b82525050565b600060608201905061042460008301866102fa565b81810360208301526104368185610381565b90506104456040830184610400565b94935050505056fea264697066735822122018050e64015e91dfc2fa0c6c9479bc33f3d02dd80a5b1e8eec1cb59f46d7f5fa64736f6c63430008130033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}