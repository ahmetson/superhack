{
  "address": "0x3B2F0A774c34dB1Fa4745fDdC57b3e26A7AE8f10",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "greeterL1Addr",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_greeting",
          "type": "string"
        }
      ],
      "name": "setGreeting",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xc68eef5dbc7218e3c04442946fff96f0619ad8e8ddbff7d95bf4a8248ba0ac50",
  "receipt": {
    "to": null,
    "from": "0xde07C361CDAAA43200550b9dBa3Bee2Df56379ab",
    "contractAddress": "0x3B2F0A774c34dB1Fa4745fDdC57b3e26A7AE8f10",
    "transactionIndex": 16,
    "gasUsed": "328000",
    "logsBloom": "0x
    "blockHash": "0x33634919f18102b71a6bd703f4b8ec10bf4a3d82bcc289459c631836039313da",
    "transactionHash": "0xc68eef5dbc7218e3c04442946fff96f0619ad8e8ddbff7d95bf4a8248ba0ac50",
    "logs": [],
    "blockNumber": 4044342,
    "cumulativeGasUsed": "2563798",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "d9fed4e57d02565a47c52fb945fa8c0c",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"greeterL1Addr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_greeting\",\"type\":\"string\"}],\"name\":\"setGreeting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FromL2_ControlL1Greeter.sol\":\"FromL2_ControlL1Greeter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@eth-optimism/contracts/libraries/bridge/ICrossDomainMessenger.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >0.5.0 <0.9.0;\\n\\n/**\\n * @title ICrossDomainMessenger\\n */\\ninterface ICrossDomainMessenger {\\n    /**********\\n     * Events *\\n     **********/\\n\\n    event SentMessage(\\n        address indexed target,\\n        address sender,\\n        bytes message,\\n        uint256 messageNonce,\\n        uint256 gasLimit\\n    );\\n    event RelayedMessage(bytes32 indexed msgHash);\\n    event FailedRelayedMessage(bytes32 indexed msgHash);\\n\\n    /*************\\n     * Variables *\\n     *************/\\n\\n    function xDomainMessageSender() external view returns (address);\\n\\n    /********************\\n     * Public Functions *\\n     ********************/\\n\\n    /**\\n     * Sends a cross domain message to the target messenger.\\n     * @param _target Target contract address.\\n     * @param _message Message to send to the target.\\n     * @param _gasLimit Gas limit for the provided message.\\n     */\\n    function sendMessage(\\n        address _target,\\n        bytes calldata _message,\\n        uint32 _gasLimit\\n    ) external;\\n}\\n\",\"keccak256\":\"0x8f29ae23021345a20ccac7b5edb3fc38268aef943b65adc8a32e74b80bf1833a\",\"license\":\"MIT\"},\"contracts/FromL2_ControlL1Greeter.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\n// This contracts runs on L2, and controls a Greeter on L1.\\n// The greeter address is specific to Goerli.\\npragma solidity ^0.8.0;\\n\\nimport { ICrossDomainMessenger } from\\n\\\"@eth-optimism/contracts/libraries/bridge/ICrossDomainMessenger.sol\\\";\\n\\ncontract FromL2_ControlL1Greeter {\\n    // Taken from https://github.com/ethereum-optimism/optimism/tree/develop/packages/contracts/deployments/goerli#layer-2-contracts\\n    // Should be the same on all Optimism networks\\n    address crossDomainMessengerAddr = 0x4200000000000000000000000000000000000007;\\n\\n    function setGreeting(address greeterL1Addr, string calldata _greeting) public {\\n        bytes memory message;\\n\\n        message = abi.encodeWithSignature(\\\"setGreeting(string,address)\\\",\\n            _greeting, msg.sender);\\n\\n        ICrossDomainMessenger(crossDomainMessengerAddr).sendMessage(\\n            greeterL1Addr,\\n            message,\\n            1000000   // irrelevant here\\n        );\\n    }      // function setGreeting\\n\\n}          // contract FromL2_ControlL1Greeter\",\"keccak256\":\"0x7276a374bb4a5f02b870714ae5d45c58ffc2851e3abc9e1401a425eb094f978c\",\"license\":\"Unlicense\"}},\"version\":1}",
  "bytecode": "0x60806040527342000000000000000000000000000000000000076000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561006457600080fd5b5061048e806100746000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063dbd1a97d14610030575b600080fd5b61004a60048036038101906100459190610247565b61004c565b005b606082823360405160240161006393929190610314565b6040516020818303038152906040527f8d86c2ad000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633dbb202b8583620f42406040518463ffffffff1660e01b81526004016101429392919061041a565b600060405180830381600087803b15801561015c57600080fd5b505af1158015610170573d6000803e3d6000fd5b5050505050505050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101af82610184565b9050919050565b6101bf816101a4565b81146101ca57600080fd5b50565b6000813590506101dc816101b6565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610207576102066101e2565b5b8235905067ffffffffffffffff811115610224576102236101e7565b5b6020830191508360018202830111156102405761023f6101ec565b5b9250929050565b6000806000604084860312156102605761025f61017a565b5b600061026e868287016101cd565b935050602084013567ffffffffffffffff81111561028f5761028e61017f565b5b61029b868287016101f1565b92509250509250925092565b600082825260208201905092915050565b82818337600083830152505050565b6000601f19601f8301169050919050565b60006102e483856102a7565b93506102f18385846102b8565b6102fa836102c7565b840190509392505050565b61030e816101a4565b82525050565b6000604082019050818103600083015261032f8185876102d8565b905061033e6020830184610305565b949350505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610380578082015181840152602081019050610365565b60008484015250505050565b600061039782610346565b6103a18185610351565b93506103b1818560208601610362565b6103ba816102c7565b840191505092915050565b6000819050919050565b600063ffffffff82169050919050565b6000819050919050565b60006104046103ff6103fa846103c5565b6103df565b6103cf565b9050919050565b610414816103e9565b82525050565b600060608201905061042f6000830186610305565b8181036020830152610441818561038c565b9050610450604083018461040b565b94935050505056fea264697066735822122075805df222472bea7515a42078262dc86623a961c710eb48728dd7cfd2b354a464736f6c63430008130033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c8063dbd1a97d14610030575b600080fd5b61004a60048036038101906100459190610247565b61004c565b005b606082823360405160240161006393929190610314565b6040516020818303038152906040527f8d86c2ad000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633dbb202b8583620f42406040518463ffffffff1660e01b81526004016101429392919061041a565b600060405180830381600087803b15801561015c57600080fd5b505af1158015610170573d6000803e3d6000fd5b5050505050505050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101af82610184565b9050919050565b6101bf816101a4565b81146101ca57600080fd5b50565b6000813590506101dc816101b6565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610207576102066101e2565b5b8235905067ffffffffffffffff811115610224576102236101e7565b5b6020830191508360018202830111156102405761023f6101ec565b5b9250929050565b6000806000604084860312156102605761025f61017a565b5b600061026e868287016101cd565b935050602084013567ffffffffffffffff81111561028f5761028e61017f565b5b61029b868287016101f1565b92509250509250925092565b600082825260208201905092915050565b82818337600083830152505050565b6000601f19601f8301169050919050565b60006102e483856102a7565b93506102f18385846102b8565b6102fa836102c7565b840190509392505050565b61030e816101a4565b82525050565b6000604082019050818103600083015261032f8185876102d8565b905061033e6020830184610305565b949350505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610380578082015181840152602081019050610365565b60008484015250505050565b600061039782610346565b6103a18185610351565b93506103b1818560208601610362565b6103ba816102c7565b840191505092915050565b6000819050919050565b600063ffffffff82169050919050565b6000819050919050565b60006104046103ff6103fa846103c5565b6103df565b6103cf565b9050919050565b610414816103e9565b82525050565b600060608201905061042f6000830186610305565b8181036020830152610441818561038c565b9050610450604083018461040b565b94935050505056fea264697066735822122075805df222472bea7515a42078262dc86623a961c710eb48728dd7cfd2b354a464736f6c63430008130033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 45,
        "contract": "contracts/FromL2_ControlL1Greeter.sol:FromL2_ControlL1Greeter",
        "label": "crossDomainMessengerAddr",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      }
    }
  }
}